# packages
library(tidyverse)
library(tensorflow)
library(keras3)
tensorflow::set_random_seed(197)
# the data has already been partitioned
batch_size <- 32
img_height <- 256
img_width <- 256
train_tumor <- image_dataset_from_directory(
directory = 'data/Training',
image_size = c(img_height, img_width),
batch_size = batch_size,
seed = 197
)
test_tumor <- image_dataset_from_directory(
directory = 'data/Testing',
image_size = c(img_height, img_width),
batch_size = batch_size,
seed = 197
)
# Single Layer Model
model_single_layer <- keras_model_sequential(input_shape = c(img_height, img_width, 3)) %>%
layer_rescaling(1./255) %>%
layer_flatten() %>%
layer_dense(4) %>%
layer_activation(activation = 'softmax')
# packages
library(tidyverse)
library(tensorflow)
library(keras3)
tensorflow::set_random_seed(197)
# the data has already been partitioned
batch_size <- 32
img_height <- 256
img_width <- 256
train_tumor <- image_dataset_from_directory(
directory = 'data/Training',
image_size = c(img_height, img_width),
batch_size = batch_size,
seed = 197
)
test_tumor <- image_dataset_from_directory(
directory = 'data/Testing',
image_size = c(img_height, img_width),
batch_size = batch_size,
seed = 197
)
# Single Layer Model
model_single_layer <- keras_model_sequential(input_shape = c(img_height, img_width, 3)) %>%
layer_rescaling(1./255) %>%
layer_flatten() %>%
layer_dense(4) %>%
layer_activation(activation = 'softmax')
